#!/bin/bash
echo
echo ##########################
echo # Creado por:  gomgardav #
echo # [ David Gómez García ] #
echo ##########################
echo

log=./srv_cos_02_salida.sal
cd ~/samba || exit
source ./00_00_VAR.sh

Menu () {
   SalidaMenu=$(whiptail    --title "Script 02"                         \
                            --menu "Selecciona una Opción" 13 35 5      \
                                    1       "Actualizar"                \
                                    2       "Generar History"           \
                                    3       "Ejecutar Script"           \
                                    4       "Reiniciar"                 \
                                    0       "Salir" 3>&1 1>&2 2>&3)
    EstadoSalidaMenu=$?
}

EstadoSalidaMenu=0
while [ "$EstadoSalidaMenu" = 0 ]; do

    Menu
    Exit=no

    case "$SalidaMenu" in

        1 ) dnf -y update && dnf -y upgrade;;

        2 ) HISTFILE=~/.bash_history && set -o history && history > ./srv_cos_02-history_"$(date +%F_%H-%M-%S)".his && history -c && set +o history && HISTFILE="";;

        3 ) 

dnf -y install wget acl attr gvfs gvfs-devel dbus dbus-tools dbus-glib-devel dbus-libs dbus-c++-devel quota \
               chrony nfs-utils nfs4-acl-tools #ntp ntpdate nfs-kernel-server &&
dnf -y install patch python3-markdown python3-iso8601 python3-cryptography python3-pyasn1 python3-asn1crypto \
               cups-devel oddjob oddjob-mkhomedir #samba-winbind samba-winbind-clients &&
# libsystemd-dev dnsutils cups cups-ipp-utils cups-bsd


cat << EOF > /etc/nsswitch.conf
# Generated by authselect on Wed Jun 16 18:11:28 2021
# Do not modify this file manually.

# If you want to make changes to nsswitch.conf please modify
# /etc/authselect/user-nsswitch.conf and run 'authselect apply-changes'.
#
# Note that your changes may not be applied as they may be
# overwritten by selected profile. Maps set in the authselect
# profile takes always precedence and overwrites the same maps
# set in the user file. Only maps that are not set by the profile
# are applied from the user file.
#
# For example, if the profile sets:
#     passwd: sss files
# and /etc/authselect/user-nsswitch.conf contains:
#     passwd: files
#     hosts: files dns
# the resulting generated nsswitch.conf will be:
#     passwd: sss files # from profile
#     hosts: files dns  # from user file

passwd:     sss files winbind systemd
group:      sss files winbind systemd
netgroup:   sss files
automount:  sss files
services:   sss files

# Included from /etc/authselect/user-nsswitch.conf

#
# /etc/nsswitch.conf
#
# Name Service Switch config file. This file should be
# sorted with the most-used services at the beginning.
#
# Valid databases are: aliases, ethers, group, gshadow, hosts,
# initgroups, netgroup, networks, passwd, protocols, publickey,
# rpc, services, and shadow.
#
# Valid service provider entries include (in alphabetical order):
#
# compat      Use /etc files plus *_compat pseudo-db
# db      Use the pre-processed /var/db files
# dns     Use DNS (Domain Name Service)
# files     Use the local files in /etc
# hesiod      Use Hesiod (DNS) for user lookups
# nis     Use NIS (NIS version 2), also called YP
# nisplus     Use NIS+ (NIS version 3)
#
# See ' info libc 'NSS Basics' ' for more information.
#
# Commonly used alternative service providers (may need installation):
#
# ldap      Use LDAP directory server
# myhostname    Use systemd host names
# mymachines    Use systemd machine names
# mdns*, mdns*_minimal  Use Avahi mDNS/DNS-SD
# resolve     Use systemd resolved resolver
# sss     Use System Security Services Daemon (sssd)
# systemd     Use systemd for dynamic user option
# winbind     Use Samba winbind support
# wins      Use Samba wins support
# wrapper     Use wrapper module for testing
#
# Notes:
#
# 'sssd' performs its own 'files'-based caching, so it should generally
# come before 'files'.
#
# WARNING: Running nscd with a secondary caching service like sssd may
#      lead to unexpected behaviour, especially with how long
#      entries are cached.
#
# Installation instructions:
#
# To use 'db', install the appropriate package(s) (provide 'makedb' and
# libnss_db.so.*), and place the 'db' in front of 'files' for entries
# you want to be looked up first in the databases, like this:
#
# passwd:    db files
# shadow:    db files
# group:     db files

# In order of likelihood of use to accelerate lookup.
shadow:     files sss winbind
hosts:      files dns wins myhostname

aliases:    files
ethers:     files
gshadow:    files
# Allow initgroups to default to the setting for group.
# initgroups: files
networks:   files dns
protocols:  files
publickey:  files
rpc:        files

EOF

test -f /etc/pam.d/password-auth.org && cp /etc/pam.d/password-auth /etc/pam.d/password-auth.bak || cp /etc/pam.d/password-auth /etc/pam.d/password-auth.org
authselect select winbind with-mkhomedir --force
systemctl enable oddjobd --now
# cat << EOF > /etc/pam.d/password-auth
# #%PAM-1.0
# auth        required      pam_env.so
# auth        sufficient    pam_unix.so nullok try_first_pass
# auth        requisite     pam_succeed_if.so uid >= 1000 quiet_success
# auth        sufficient    pam_winbind.so use_first_pass
# auth        required      pam_deny.so

# account     required      pam_unix.so broken_shadow
# account     sufficient    pam_localuser.so
# account     sufficient    pam_succeed_if.so uid < 1000 quiet
# account     [default=bad success=ok user_unknown=ignore] pam_winbind.so
# account     required      pam_permit.so

# password    requisite     pam_cracklib.so try_first_pass retry=3 type=
# password    sufficient    pam_unix.so sha512 shadow nullok try_first_pass use_authtok
# password    sufficient    pam_winbind.so use_authtok
# password    required      pam_deny.so

# session     optional      pam_keyinit.so revoke
# session     required      pam_limits.so
# session     [success=1 default=ignore] pam_succeed_if.so service in crond quiet use_uid
# session     required      pam_unix.so

# EOF

dnf -y install docbook-style-xsl gcc gdb gnutls-devel gpgme-devel jansson-devel \
      keyutils-libs-devel krb5-workstation libacl-devel libaio-devel \
      libarchive-devel libattr-devel libblkid-devel libtasn1 libtasn1-tools \
      libxml2-devel libxslt lmdb-devel openldap-devel pam-devel perl \
      perl-ExtUtils-MakeMaker perl-Parse-Yapp popt-devel python3-cryptography \
      python3-dns python3-gpg python36-devel readline-devel systemd-devel \
      tar zlib-devel \
      rpcgen libtirpc-devel rpcsvc-proto-devel acl attr \
      autoconf automake docbook-style-xsl gcc gdb jansson-devel \
      krb5-devel krb5-workstation libacl-devel libarchive-devel \
      libattr-devel libtasn1-tools libxslt lmdb-devel make openldap-devel \
      pam-devel python36-devel  &&

#. ./bootstrap/generated-dists/debian10/bootstrap.sh &&
# dnf config-manager --set-enabled devel
# dnf install -y \
#     --setopt=install_weak_deps=False \
#     "@Development Tools" \
#     acl attr autoconf avahi-devel bind-utils binutils bison ccache chrpath \
#     cups-devel curl dbus-devel docbook-dtds docbook-style-xsl flex gawk gcc \
#     gdb git glib2-devel glibc-common glibc-langpack-en glusterfs-api-devel \
#     glusterfs-devel gnutls-devel gpgme-devel gzip hostname htop jansson-devel \
#     keyutils-libs-devel krb5-devel krb5-server libacl-devel libarchive-devel \
#     libattr-devel libblkid-devel libbsd-devel libcap-devel libcephfs-devel \
#     libicu-devel libnsl2-devel libpcap-devel libtasn1-devel libtasn1-tools \
#     libtirpc-devel libunwind-devel libuuid-devel libxslt lmdb lmdb-devel make \
#     mingw64-gcc ncurses-devel openldap-devel pam-devel patch perl perl-Archive-Tar \
#     perl-ExtUtils-MakeMaker perl-JSON perl-Parse-Yapp perl-Test-Simple \
#     perl-generators perl-interpreter pkgconfig popt-devel procps-ng psmisc python3 \
#     python3-cryptography python3-devel python3-dns python3-gpg python3-iso8601 \
#     python3-libsemanage python3-markdown python3-policycoreutils python3-pyasn1 \
#     python3-setproctitle quota-devel readline-devel redhat-lsb rpcgen rpcsvc-proto-devel \
#     rsync sed sudo systemd-devel tar tree wget which xfsprogs-devel yum-utils zlib-devel rng-tools
# dnf config-manager --set-disabled devel

dnf -y autoremove
dnf -y clean all

            Enter="Enter"
            while [ -n "$Enter" ]; do
                echo
                read -p "Pulsa Enter para Continuar..." Enter
            done

            HISTFILE=~/.bash_history && set -o history && history > ./srv_cos_02-history_"$(date +%F_%H-%M-%S)".his && history -c && set +o history && HISTFILE="";;

        4 ) reboot; exit;;
        
        0 ) Exit=yes; break;;

        * ) echo "Error en el Script !!!";;

    esac

done

clear
if [ "$Exit" = "yes" ] && [ "$EstadoSalidaMenu" = "0" ]; then
    echo "Has Salido Correctamente !"

elif [ "$EstadoSalidaMenu" = "1" ]; then
    echo "Has seleccionado Cancelar !"

else
    echo "Ha habido un Error !!!"

fi
